<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.0.xsd
           http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-2.0.xsd">

    <!-- Now we set up a simple datasource. Use a better one in production. -->
    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
        <property name="driverClassName" value="org.hsqldb.jdbcDriver"/>
        <property name="url" value="jdbc:hsqldb:/opt/db/geomail"/>
        <property name="username" value="sa"/>
        <property name="password" value=""/>
    </bean>

    <!-- At last, the entity manager. -->
    <bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">

        <property name="persistenceUnitName" value="geomailPersistenceUnit"/>
        <property name="dataSource" ref="dataSource"/>

        <!--property name="loadTimeWeaver">
            <bean class="org.springframework.instrument.classloading.SimpleLoadTimeWeaver"/>
        </property-->

        <!--  I'm not sure this is really necessary.. -->
        <property name="jpaVendorAdapter">
            <bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
                <property name="database" value="HSQL"/>
                <property name="databasePlatform" value="org.hibernate.dialect.HSQLDialect"/>
                <property name="showSql" value="true"/>
                <property name="generateDdl" value="true"/>
            </bean>
        </property>
    </bean>

    <!-- A simple transaction manager for our (single) EntityManagerFactory.  -->
    <bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
         <property name="entityManagerFactory" ref="entityManagerFactory"/>
         <property name="dataSource" ref="dataSource"/>
     </bean>

    <tx:annotation-driven/>

    <!-- This makes Spring perform the magic @PersistenceContext/@PersitenceUnit injection -->
    <bean class="org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor"/>

    <!-- Here's our DAO (which we call "service" - sorry.  I wish I had a better refactoring tool.) -->
    <bean id="senderDao" class="org.mule.example.geomail.dao.impl.SenderDaoImpl" />

</beans>
